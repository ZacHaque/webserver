---
AWSTemplateFormatVersion: 2010-09-09
Description: Atlassian Bitbucket Data Center QS(0034)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Bitbucket setup
        Parameters:
          - BitbucketVersion
      - Label:
          default: Cluster nodes
        Parameters:
          - ClusterNodeInstanceType
          - ClusterNodeMax
          - ClusterNodeMin
      - Label:
          default: File server
        Parameters:
          - FileServerInstanceType
          - HomeSize
          - HomeVolumeType
          - HomeIops
      - Label:
          default: Database
        Parameters:
          - DBInstanceClass
          - DBIops
          - DBMasterUserPassword
          - DBMultiAZ
          - DBPassword
          - DBStorage
          - DBStorageType
      - Label:
          default: Elasticsearch
        Parameters:
          - ElasticsearchInstanceType
      - Label:
          default: Networking
        Parameters:
          - AssociatePublicIpAddress
          - AWSCidrBlock
          - KeyPairName
          - SSLCertificateARN
      - Label:
          default: Advanced (Optional)
        Parameters:
          - AMIOpts
          - BitbucketProperties
          - CatalinaOpts
          - CreateBucket
          - DBMaster
          - DBSnapshotId
          - EBSSnapshotId
          - ESBucketName
          - ESSnapshotId
          - HomeVolumeSnapshotId
          - HomeDeleteOnTermination
          - StartCollectd
    ParameterLabels:
      AMIOpts:
        default: AMI Options
      AssociatePublicIpAddress:
        default: Assign public IP
      BitbucketProperties:
        default: Bitbucket properties
      BitbucketVersion:
        default: Version *
      CatalinaOpts:
        default: Catalina options
      AWSCidrBlock:
        default: Permitted IP range *
      ClusterNodeMax:
        default: Maximum number of cluster nodes
      ClusterNodeMin:
        default: Minimum number of cluster nodes
      ClusterNodeInstanceType:
        default: Cluster node instance type
      CreateBucket:
        default: Create S3 bucket for Elasticsearch snapshots
      DBInstanceClass:
        default: Database instance class
      DBIops:
        default: RDS Provisioned IOPS
      DBMasterUserPassword:
        default: Master password *
      DBMaster:
        default: Bitbucket primary database
      DBMultiAZ:
        default: Enable RDS Multi-AZ deployment
      DBPassword:
        default: Bitbucket database password *
      DBStorage:
        default: Database storage
      DBStorageType:
        default: Database storage type
      DBSnapshotId:
        default: Database snapshot ID to restore
      EBSSnapshotId:
        default: EBS snapshot ID to restore
      ElasticsearchInstanceType:
        default: Elasticsearch instance type
      ESBucketName:
        default: Elasticsearch snapshot S3 bucket name
      ESSnapshotId:
        default: Elasticsearch snapshot ID to restore
      FileServerInstanceType:
        default: File server instance type
      HomeDeleteOnTermination:
        default: Delete Home on termination
      HomeIops:
        default: Home directory IOPS
      HomeSize:
        default: Home directory size
      HomeVolumeSnapshotId:
        default: Home volume snapshot ID to restore
      HomeVolumeType:
        default: Home directory volume type
      KeyPairName:
        default: Key Name *
      SSLCertificateARN:
        default: SSL Certificate ARN
      StartCollectd:
        default: Start the collectd service
Parameters:
  ESSubnetID:
    Type: String
    Description: Provide subnet id where the ES Domain to be deployed
  ProtectedSubnets:
    Type: CommaDelimitedList
    Description: Need to provide a comma separated list of subnet id
  PrivateSubnets:
    Type: CommaDelimitedList
    Description: Need to provide a comma separated list of subnet id
  ReleaseName:
    Type: String
    AllowedPattern: .+
    ConstraintDescription: Must provide a Release name which is exact match of the release name used in the Bitbucket Prep stack
    Description: Release name to distinguse deployment
  Route53ZoneDomain:
    Type: String
    Description: Route53 zone domain that represents the environment
    AllowedValues:
      - cd.dev.private.aws.metest.com.au
      - cd.private.aws.mebank.com.au
  AMIOpts:
    Default: ''
    Description: A comma separated list of options to pass to the AMI
    Type: CommaDelimitedList
  AssociatePublicIpAddress:
    Default: false
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Controls if the EC2 instances are assigned a public IP address
    Type: String
  BitbucketProperties:
    Default: ''
    Description: A comma-separated list of bitbucket properties in the form 'key1=value1, key2=value2, ...' Find documentation at https://confluence.atlassian.com/x/m5ZKLg
    Type: CommaDelimitedList
  BitbucketVersion:
    Default: 6.0.0
    AllowedPattern: '([^1234]\.\d+\.\d+(-?.*))'
    ConstraintDescription: 'Must be a valid Bitbucket version number. For example: 5.0.0 or higher'
    Description: 'Version of Bitbucket to install. Please use version 5.0.0 or higher. Find valid versions at http://go.atlassian.com/bbs-releases'
    Type: String
  CatalinaOpts:
    Default: ''
    Description: Pass in any additional JVM options to tune Catalina Tomcat
    Type: String
  AWSCidrBlock:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: CIDR block allowed to access the Atlassian product. This should be set to a trusted IP range; if you want to give public access use '0.0.0.0/0'.
    MinLength: 9
    MaxLength: 18
    Type: String
# Region ClusterNodeInstanceType
  ClusterNodeInstanceType:
    Default: c4.xlarge
    AllowedValues:
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - i3.metal
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be an EC2 instance type from the selection list
    Description: 'Instance type for the cluster application nodes. See https://confluence.atlassian.com/x/GpdKLg for guidance'
    Type: String
# EndRegion
  ClusterNodeMax:
    Description: Maximum number of nodes in the cluster.
    Default: 2
    Type: Number
  ClusterNodeMin:
    Default: 1
    Description: Set to 1 for new deployment. Can be updated post launch.
    Type: Number
  CreateBucket:
    Default: true
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Set to true to create the S3 bucket within this stack, must be used in conjunction with ESBucketName.
    Type: String
  ESBucketName:
    Default: ''
    AllowedPattern: '[a-z0-9-]*'
    ConstraintDescription: Must contain only lowercase letters, numbers and hyphens (-).
    Description: Name of a new, or existing, S3 bucket configured for Elasticsearch snapshots.
    Type: String
  ESSnapshotId:
    Default: ''
    AllowedPattern: '[a-z0-9-]*'
    ConstraintDescription: Must contain only lowercase letters, numbers and hyphens (-).
    Description: Must be a valid snapshot ID for a snapshot in the configured S3 snapshot repository, must be used in conjunction with ESBucketName set to a correctly configured bucket.
    Type: String
  DBInstanceClass:
    Default: db.m4.large
    AllowedValues:
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
    ConstraintDescription: Must be a valid RDS instance class from the list
    Description: RDS instance type
    Type: String
  DBIops:
    Default: 1000
    ConstraintDescription: Must be in the range 1000 - 30000.
    Description: 'Must be in the range of 1000 - 30000 and a multiple of 1000. This value is only used with Provisioned IOPS. Note: The ratio of IOPS per allocated-storage must be between 3.00 and 10.00.'
    MinValue: 1000
    MaxValue: 30000
    Type: Number
  DBMasterUserPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be at least 8 alphanumeric characters.
    Description: Password for the master ('postgres') account.
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBMultiAZ:
    Description: Whether to provision a multi-AZ RDS instance.
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Type: String
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: If specified, must be at least 8 alphanumeric characters.
    Description: Password for the Bitbucket user ('atlbitbucket') account. Max length of 128 characters. Not used if you have specified a Database snapshot ID.
    MaxLength: 128
    NoEcho: true
    Type: String
  DBMaster:
    Default: ''
    ConstraintDescription: Must be a valid RDS ARN.
    Description: Database ARN of the RDS instance to replicate. Setting this parameter will bring up Bitbucket as a Disaster recovery standby, with an RDS read replica database.
    Type: String
  DBSnapshotId:
    Default: ''
    ConstraintDescription: Must be a valid RDS snapshot ID, or blank.
    Description: RDS snapshot ID of an existing backup to restore. Must be used in conjunction with HomeVolumeSnapshotId. Leave blank for a new instance.
    Type: String
  EBSSnapshotId:
    Default: ''
    ConstraintDescription: Must be a valid EBS snapshot ID, or blank.
    Description: EBS snapshot ID of an existing backup to restore. Leave blank for a new instance.
    Type: String
  DBStorage:
    Default: 10
    Description: Database allocated storage size, in gigabytes (GB). If you choose Provisioned IOPS, storage should be between 100 and 6144
    MinValue: 5
    MaxValue: 6144
    Type: Number
  DBStorageType:
    Default: General Purpose (SSD)
    AllowedValues:
      - General Purpose (SSD)
      - Provisioned IOPS
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
    Description: Database storage type
    Type: String
  ElasticsearchInstanceType:
    Description: EC2 instance type for the Amazon Elasticsearch service to run on.
    Type: String
    Default: m4.xlarge.elasticsearch
    AllowedValues:
      - m4.large.elasticsearch
      - m4.xlarge.elasticsearch
      - m4.2xlarge.elasticsearch
      - r4.large.elasticsearch
      - r4.xlarge.elasticsearch
      - r4.2xlarge.elasticsearch
      - r4.4xlarge.elasticsearch
      - r4.8xlarge.elasticsearch
      - i2.xlarge.elasticsearch
      - i2.2xlarge.elasticsearch
    ConstraintDescription: Must be an Elasticsearch instance type in the M4, R4 or I2 family
  FileServerInstanceType:
    Default: m4.xlarge
    AllowedValues:
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - x1.32xlarge
    ConstraintDescription: Must be an EC2 instance type in the C4, M4, or X1 family, 'xlarge' or larger.
    Description: Instance type for the file server hosting the Bitbucket shared home directory. See https://confluence.atlassian.com/x/GpdKLg for guidance
    Type: String
  HomeDeleteOnTermination:
    Default: true
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Delete Bitbucket home directory volume when the file server instance is terminated.  You must back up your data before terminating your file server instance if this option is set to 'true'
    Type: String
  HomeIops:
    Default: 1000
    Description: 'Home directory IOPS (100 - 20000, only used with Provisioned IOPS). Note: The ratio of IOPS provisioned to the volume size requested can be a maximum of 50; for example, a volume with 5000 IOPS must be at least 100 GiB'
    Type: Number
    MinValue: 100
    MaxValue: 20000
    ConstraintDescription: Must be in the range 100 - 20000.
  HomeSize:
    Default: 250
    Description: Home directory storage size, in gigabytes (GB) (100 - 16384)
    ConstraintDescription: Must be in the range 100 - 16384.
    MinValue: 100
    MaxValue: 16384
    Type: Number
  HomeVolumeSnapshotId:
    Default: ''
    ConstraintDescription: Must be a valid EBS snapshot ID
    Description: EBS snapshot ID of an existing backup to restore as the home directory volume. Must be used in conjunction with DBSnapshotId. Leave blank for a new instance.
    Type: String
  HomeVolumeType:
    Default: Provisioned IOPS
    Description: Bitbucket home storage type.
    AllowedValues: [General Purpose (SSD), Provisioned IOPS]
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
    Type: String
  KeyPairName:
    ConstraintDescription: Must be the name of an existing EC2 Key Pair.
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  LoadBalancerDNSName:
    ConstraintDescription: Must provide a DNS name for Load Balancer.
    Description: The Dns name of the load balancer - URL
    Type: String
  SSLCertificateARN:
    Default: ''
    Description: Amazon Resource Name (ARN) of your SSL certificate. If you want to use your own certificate that you generated outside of Amazon, you need to first import it to AWS Certificate Manager. After a successful import, you'll receive the ARN. If you want to create a certificate with AWS Certificate Manager (ACM certificate), you will receive the ARN after it's successfully created.
    MinLength: 0
    MaxLength: 90
    Type: String
  StartCollectd:
    Description: Start the 'collectd' metrics agent.
    Type: String
    Default: false
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'
  NFSSubnetID:
    # AllowedValues:
    #   - PRI1-T1-ID-r0
    #   - PRI2-T1-ID-r0
    #   - PRI3-T1-ID-r0
    Type: String
    Default: PRI1-T1-ID-r0
    Description: Provide Subnet ID of a protected layer where you want to deploy your EC2 eg- PRI1-T1-ID-r0 , PRI2-T1-ID-r0
  VPCID:
    Type: String
    AllowedPattern: .+
    ConstraintDescription: Must provide a a valid VPC ID 
    Description: VPC ID for Bitbucket Deployment
Conditions:
  DBProvisionedIops:
    !Equals [!Ref DBStorageType, Provisioned IOPS]
  SetupCollectd:
    !Equals [!Ref StartCollectd, true]
  RestoreFromEBSSnapshot:
    !Not [!Equals [!Ref HomeVolumeSnapshotId, '']]
  RestoreFromRDSSnapshot:
    !Not [!Equals [!Ref DBSnapshotId, '']]
  # RestoreFromEBSSnapshot:
  #   !Not [!Equals [!Ref EBSSnapshotId, '']]
  RestoreFromESSnapshot:
    !And
    - !Not [!Equals [!Ref ESSnapshotId, '']]
    - Condition: ESBucketNameSet
  CreateESBucket:
    !And
    - !Equals [!Ref CreateBucket, 'true']
    - !And
      - !Not [Condition: RestoreFromESSnapshot]
      - Condition: ESBucketNameSet
  ESBucketNameSet:
    !Not [!Equals [!Ref ESBucketName, '']]
  StandbyMode:
    !Not [!Equals [!Ref DBMaster, '']]
  DoSSL:
    !Not [!Equals [!Ref SSLCertificateARN, '']]
  NotStandbyMode:
    !Equals [!Ref DBMaster, '']
  KeyProvided:
    !Not [!Equals [!Ref KeyPairName, '']]
  IsHomeProvisionedIops:
    !Equals [!Ref HomeVolumeType, Provisioned IOPS]
  IsVersion5X:
    !Equals ['5', !Select [0, !Split ['.', !Ref BitbucketVersion]]]
  IsVersionX0:
    !Equals ['0', !Select [1, !Split ['.', !Ref BitbucketVersion]]]
  IsVersionX1:
    !Equals ['1', !Select [1, !Split ['.', !Ref BitbucketVersion]]]
  IsVersionX2:
    !Equals ['2', !Select [1, !Split ['.', !Ref BitbucketVersion]]]
  IsVersionX3:
    !Equals ['3', !Select [1, !Split ['.', !Ref BitbucketVersion]]]
  IsVersionX4:
    !Equals ['4', !Select [1, !Split ['.', !Ref BitbucketVersion]]]
  IsVersionX5:
    !Equals ['5', !Select [1, !Split ['.', !Ref BitbucketVersion]]]
  IsVersionX6:
    !Equals ['6', !Select [1, !Split ['.', !Ref BitbucketVersion]]]
  ShouldUseES23:
    !And [Condition: IsVersion5X, !Or [Condition: IsVersionX0, Condition: IsVersionX1, Condition: IsVersionX2, Condition: IsVersionX3, Condition: IsVersionX4, Condition: IsVersionX5, Condition: IsVersionX6]]
  RestoreRDSOrStandby:
    !Or [Condition: RestoreFromRDSSnapshot, Condition: StandbyMode]
  RestoreEBSOrStandby:
    !Or [Condition: RestoreFromEBSSnapshot, Condition: StandbyMode]
  SetDBMasterUserPassword:
    !And [!Not [!Equals [!Ref DBMasterUserPassword, '']], Condition: NotStandbyMode]
  UsePublicIp:
    !Equals [!Ref AssociatePublicIpAddress, 'true']
Mappings:
  AWSRegionArch2AMI:
  # This is the built encrypted AMI. Only exists in ap-southeast-2
    cd.private.aws.mebank.com.au:
      HVM64: ami-08277523ff96491a5
    cd.dev.private.aws.metest.com.au:
      HVM64: ami-0277de0b4ab4fd16a
  BitbucketFileServerAMI:
  # ami-0dc96254d5535925f is a community AMI - unencrypted as per atlassian QS. Following AMI (encrypted) has been created from this AMI using CMK
    cd.private.aws.mebank.com.au:
      HVM64: ami-08f780e874169d3ae
    cd.dev.private.aws.metest.com.au:
      HVM64: ami-04f49ebb6b6dd9688
Resources:
  ClusterNodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !If [StandbyMode, 0, !Ref ClusterNodeMin]
      LaunchConfigurationName: !Ref ClusterNodeLaunchConfig
      LifecycleHookSpecificationList:
        - LifecycleTransition: "autoscaling:EC2_INSTANCE_LAUNCHING"
          LifecycleHookName: !Ref AWS::StackName
          DefaultResult: "CONTINUE"
          HeartbeatTimeout: 420
      NotificationConfigurations:
      - TopicARN: !ImportValue CDTOOLS-SNS-TOPIC-r0
        NotificationTypes:
        - autoscaling:EC2_INSTANCE_LAUNCH
        - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        - autoscaling:EC2_INSTANCE_TERMINATE
        - autoscaling:EC2_INSTANCE_TERMINATE_ERROR

      LoadBalancerNames: 
         - Fn::ImportValue: !Sub 'BitbucketClassicLoadBalancer-${ReleaseName}'
      MinSize: !If [StandbyMode, 0, !Ref ClusterNodeMin]
      MaxSize: !Ref ClusterNodeMax
      # VPCZoneIdentifier: !Split [ ",", !Join [ ",", [ !ImportValue PRI1-T1-ID-r0, !ImportValue PRI2-T1-ID-r0, !ImportValue PRI3-T1-ID-r0 ] ] ]
      #FIXME: Need to collect new import variables from inception
      VPCZoneIdentifier: !Ref ProtectedSubnets
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      Tags:
        - Key: Name
          Value: !Sub ["${StackName} Bitbucket Node", StackName: !Ref 'AWS::StackName']
          PropagateAtLaunch: true
        - Key: Cluster
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
        - Key: ProjectCode
          Value: 'T24'
          PropagateAtLaunch: true
        - Key: OwnerEmail
          Value: 'aws-integration-bitbucket@mebank.com.au'
          PropagateAtLaunch: true
        - Key: Availability
          Value: '24x7'
          PropagateAtLaunch: true
        - Key: Application
          Value: 'Bitbucket'
          PropagateAtLaunch: true
        - Key: Service
          Value: 'SCM'
          PropagateAtLaunch: true
  ClusterNodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default: [1, 2, 3, 4]

        '1':
          files:
            /etc/atl:
              content:
                !Join
                - "\n"
                -
                  - ATL_APP_DATA_MOUNT_ENABLED=false
                  - !Sub ["ATL_DB_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                  - ATL_DB_NAME=bitbucket
                  - !Sub ["ATL_DB_HOST=${DBEndpointAddress}", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                  - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                  - ATL_JDBC_DRIVER=org.postgresql.Driver
                  - !Sub
                    - "ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/bitbucket"
                    - DBEndpointAddress: !GetAtt DB.Endpoint.Address
                      DBEndpointPort: !GetAtt DB.Endpoint.Port
                  - ATL_JDBC_USER=atlbitbucket
                  - !Sub ["ATL_JDBC_PASSWORD=${DBPassword}", DBPassword: !Ref DBPassword]
                  - !Sub ["ATL_BITBUCKET_PROPERTIES=\"${BitbucketProperties}", BitbucketProperties: !Join ["\n", !Ref BitbucketProperties]]
                  - hazelcast.network.aws=true
                  - !Sub
                      - "hazelcast.network.aws.iam.role=${BitbucketClusterNodeRole}"
                      - BitbucketClusterNodeRole:
                          Fn::ImportValue:
                            !Sub "BitbucketClusterNodeRole-${ReleaseName}"
                  - !Sub ["hazelcast.network.aws.region=${Region}", Region: !Ref "AWS::Region"]
                  - hazelcast.network.aws.tag.key=Cluster
                  - !Sub ["hazelcast.network.aws.tag.value=${StackName}", StackName: !Ref "AWS::StackName"]
                  - hazelcast.network.multicast=false
                  - !Sub ["hazelcast.group.name=${StackName}", StackName: !Ref "AWS::StackName"]
                  - !Sub ["hazelcast.group.password=${StackName}\"", StackName: !Ref "AWS::StackName"]
                  # - !Sub ["plugin.search.elasticsearch.aws.region=${Region}", Region: !Ref "AWS::Region"]
                  # - !Sub ["plugin.search.elasticsearch.baseurl=https://${ESEndpoint}\"", ESEndpoint: !GetAtt Elasticsearch.DomainEndpoint]
                  # - plugin.search.elasticsearch.baseurl=http://localhost:7992/
                  # - plugin.search.elasticsearch.username=atlbitbucket
                  # - plugin.search.elasticsearch.password=atlbitbucket"
                  - !Sub ["ATL_BITBUCKET_VERSION=${BitbucketVersion}", BitbucketVersion: !Ref BitbucketVersion]
                  - ATL_BITBUCKET_BUNDLED_ELASTICSEARCH_ENABLED=false
                  - ATL_NGINX_ENABLED=false
                  - ATL_POSTGRES_ENABLED=false
                  - !Sub ["ATL_PROXY_NAME=${LoadBalancerDNSName}", LoadBalancerDNSName: !Ref LoadBalancerDNSName]
                  - ATL_SSL_SELF_CERT_ENABLED=false
                  - !If [DoSSL, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                  - !Join ["\n", !Ref AMIOpts]
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - "\n"
                -
                  - "[main]"
                  - !Sub ["stack=${StackId}", StackId: !Ref "AWS::StackId"]
                  - !Sub ["region=${Region}", Region: !Ref "AWS::Region"]
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                - "\n"
                -
                  - "[cfn-auto-reloader-hook]"
                  - triggers=post.update
                  - "path=Resources.ClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init"
                  - !Sub
                    - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource ClusterNodeLaunchConfig --region ${Region}"
                    - StackName: !Ref "AWS::StackName"
                      Region: !Ref "AWS::Region"
                  - runas=root
            /home/atlbitbucket/.bash_profile:
              content:
                !Join
                - "\n"
                -
                  - if [ -f ~/.bashrc ]; then
                  -     . ~/.bashrc
                  - fi
                  - !Sub ["export CATALINA_OPTS=\"${CatalinaOpts}\"", CatalinaOpts: !Ref CatalinaOpts]
              mode: '000644'
              owner: atlbitbucket
              group: atlbitbucket
          commands:
            # 005_make_file_system:
            #   command: blkid -o value -s TYPE /dev/xvdf | grep ext4 || echo "y" | mkfs -t ext4 /dev/xvdf
            #   ignoreErrors: false
            # 010_add_nfs_mount:
            #   command: ! Sub |
            #     echo nfs.${Route53ZoneDomain}:/media/atl/bitbucket/shared /media/atl/bitbucket/shared nfs rw,nfsvers=4.1,lookupcache=pos,noatime,intr,rsize=32768,wsize=32768,_netdev 0 0 >>/etc/fstab
            #   ignoreErrors: false
            020_make_shared_home_dir:
              command: mkdir -p /media/atl/bitbucket/shared
              ignoreErrors: false
            030_chown_shared_home_dir:
              command: "chown atlbitbucket:atlbitbucket /media/atl/bitbucket /media/atl/bitbucket/shared"
              ignoreErrors: false
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files: [/etc/cfn/cfn-hup.conf, /etc/cfn/hooks.d/cfn-auto-reloader.conf]
              collectd:
                !If [SetupCollectd, {enabled: true, ensureRunning: true}, !Ref "AWS::NoValue"]
              rpcbind:
                enabled: true
                ensureRunning: true
                packages:
                  yum: [nfs-utils]
        '2':
          commands:
            040_mount_nfs:
              command: "bash -c \"until mount /media/atl/bitbucket/shared; do echo 'Mount of shared volume failed trying again in 5 seconds.'; sleep 5; done\""
              ignoreErrors: false
        '3':
          services:
            sysvinit:
              nfslock:
                enabled: true
                ensureRunning: true
                packages:
                  yum: [nfs-utils]
          commands:
            030_fix_soft_file_limit:
              command: "echo 'atlbitbucket           soft    nofile          16384' >> /etc/security/limits.conf"
            045_fix_hard_file_limit:
              command: "echo 'atlbitbucket           hard    nofile          16384' >> /etc/security/limits.conf"
            atl-init-10-volume:
              command: "/etc/init.d/atl-init-10-volume start"
            atl-init-30-db:
              command: "/etc/init.d/atl-init-30-db start"
            atl-init-40-products:
              command: "/etc/init.d/atl-init-40-products start"
              ignoreErrors: true
        '4':
          commands:
            005_list_bitbucket:
              command: "ls -lr /opt/atlassian/bitbucket/"
              ignoreErrors: false
            008_logAppStop:
              command: "echo 'Final cfn-init BB service stop' >> /var/log/atl.log"
              ignoreErrors: false
            010_stop_bitbucket:
              command: "/opt/atlassian/bitbucket/bin/stop-bitbucket.sh"
              ignoreErrors: false
            008_stop_race_condition:
              command: "while [[ ! -f /opt/atlassian/bitbucket/bin/stop-bitbucket.sh ]] ; do echo 'Waiting for stop-bitbucket.sh' ; sleep 1 ; done"
              ignoreErrors: false
            026_fix_umask:
              command: "sed -i 's/# umask 0027/umask 0027/' _start-webapp.sh"
              cwd: "/opt/atlassian/bitbucket/bin"
              ignoreErrors: false
            030_logAppStart:
              command: "echo 'Final cfn-init BB service start' >> /var/log/atl.log"
              ignoreErrors: false
            # 035_RecreateESIndex:
            #   command: "find /media/atl/bitbucket/shared/search/data/nodes/ -type f -delete"
            #   ignoreErrors: false
            040_start_bitbucket:
              command: "/opt/atlassian/bitbucket/bin/start-bitbucket.sh"
              ignoreErrors: false
    Properties:
      AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
      KeyName: !If [ KeyProvided, !Ref KeyPairName, !ImportValue ATL-DefaultKey ]
      IamInstanceProfile:
        Fn::ImportValue:
          !Sub "BitbucketClusterNodeInstanceProfile-${ReleaseName}"
      ImageId:
        !FindInMap
        - AWSRegionArch2AMI
        - !Ref Route53ZoneDomain
        - HVM64
      InstanceType: !Ref ClusterNodeInstanceType
      SecurityGroups: [!Ref SecurityGroup]
      UserData:
        Fn::Base64:
          !Join
          - ""
          -
            - "#!/bin/bash -xe\n"
            - "export PATH=$PATH:/sbin\n"
            - "export http_proxy=proxy.prod.centralservices.cld:3128\n"
            - "export https_proxy=proxy.prod.centralservices.cld:3128\n"
            - "export no_proxy=169.254.169.254,169.254.170.2\n"
            - "echo http_proxy=proxy.prod.centralservices.cld:3128 > /etc/environment\n"
            - "echo https_proxy=proxy.prod.centralservices.cld:3128 >> /etc/environment\n"
            - "echo no_proxy=169.254.169.254,169.254.170.2 >> /etc/environment\n"
            - "for line in $( cat /etc/environment ) ; do export $line ; done\n"
            - "sed -i 's/if ! curl -L -f /if ! curl -L -x proxy.prod.centralservices.cld:3128 -f /g' /etc/init.d/atl-init-bitbucket\n"
            - "yum install -y amazon-ssm-agent\n"
            - "curl https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm -v -O\n"
            - "rpm -U ./amazon-cloudwatch-agent.rpm\n"
            - !Sub ["aws s3 cp s3://bitbucket.${Route53ZoneDomain}", Route53ZoneDomain: !Ref Route53ZoneDomain]
            - "/AmazonCloudWatch-config.json --region ap-southeast-2 /opt/aws/amazon-cloudwatch-agent/bin\n" 
            - "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/bin/AmazonCloudWatch-config.json -s\n"
            - "yum update -y aws-cfn-bootstrap\n"
            - "yum-complete-transaction --cleanup-only\n"
            - "rm -f /var/atlassian/application-data/bitbucket/shared\n"
            - !Sub ["echo nfs.${Route53ZoneDomain}:/media/atl/bitbucket/shared /media/atl/bitbucket/shared nfs rw,nfsvers=4.1,lookupcache=pos,noatime,intr,rsize=32768,wsize=32768,_netdev 0 0 >>/etc/fstab\n", Route53ZoneDomain: !Ref Route53ZoneDomain]
            - !Sub ["/opt/aws/bin/cfn-init -v --stack ${StackName}", StackName: !Ref "AWS::StackName"]
            - !Sub [" --http-proxy proxy.prod.centralservices.cld:3128 --https-proxy proxy.prod.centralservices.cld:3128 --resource ClusterNodeLaunchConfig --region ${Region}\n", Region: !Ref "AWS::Region"]
            - !Sub ["/opt/aws/bin/cfn-signal -e $? --stack ${StackName}", StackName: !Ref "AWS::StackName"]
            - !Sub [" --http-proxy proxy.prod.centralservices.cld:3128 --https-proxy proxy.prod.centralservices.cld:3128 --resource ClusterNodeGroup --region ${Region}\n", Region: !Ref "AWS::Region"]
  ClusterNodeScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: 600
      ScalingAdjustment: 1
  ClusterNodeScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: 600
      ScalingAdjustment: -1
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale up if CPU > 60% for 5 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 5
      Threshold: 60
      AlarmActions: [!Ref ClusterNodeScaleUpPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ClusterNodeGroup
      ComparisonOperator: GreaterThanThreshold

  MonitorCpuUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm if CPU > 80% for 15 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 15
      Threshold: 80
      AlarmActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      OKActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      InsufficientDataActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      TreatMissingData: breaching
      ComparisonOperator: GreaterThanThreshold
  
  MonitorDiskUsedPercentAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm if Disk utilization > 90% for 15 minutes
      MetricName: disk_used_percent
      Namespace: CWAgent
      Statistic: Average
      Period: 60
      EvaluationPeriods: 15
      Threshold: 90
      AlarmActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      OKActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      InsufficientDataActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      TreatMissingData: breaching
      ComparisonOperator: GreaterThanThreshold

  MonitorMemoryUsedPercentAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm if memory utilization > 90% for 15 minutes
      MetricName: mem_used_percent
      Namespace: CWAgent
      Statistic: Average
      Period: 60
      EvaluationPeriods: 15
      Threshold: 90
      AlarmActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      OKActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      InsufficientDataActions:
        - !ImportValue CDTOOLS-SNS-TOPIC-r0
      TreatMissingData: breaching
      ComparisonOperator: GreaterThanThreshold

  # Elasticsearch:
  #   Type: AWS::Elasticsearch::Domain
  #   Properties:
  #     EncryptionAtRestOptions:
  #         Enabled: true
  #         KmsKeyId: !ImportValue BB-KMS-KEY-KeyId
  #     EBSOptions:
  #       EBSEnabled: true
  #       VolumeSize: 100
  #       VolumeType: gp2
  #     ElasticsearchVersion: !If [ShouldUseES23, "2.3", "7.1"]
  #     ElasticsearchClusterConfig:
  #       InstanceType: !Ref ElasticsearchInstanceType
  #       # InstanceCount: 2
  #       # DedicatedMasterEnabled: true
  #       # ZoneAwarenessEnabled: true
  #       # ZoneAwarenessConfig:
  #       #   AvailabilityZoneCount: 2	
  #       # DedicatedMasterType: !Ref ElasticsearchInstanceType
  #       # DedicatedMasterCount: 3
  #     AccessPolicies:
  #       Version: 2012-10-17
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             AWS:
  #               Fn::ImportValue:
  #                 !Sub "BitbucketClusterNodeRoleArn-${ReleaseName}" 
  #           Action: "es:*"
  #           Resource: "*"
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ["${StackName} Bitbucket Elasticsearch cluster", StackName: !Ref 'AWS::StackName']
  #       - Key: Application
  #         Value: !Ref "AWS::StackId"
  #     VPCOptions:
  #       SubnetIds:
  #         - !Ref ESSubnetID
  #       SecurityGroupIds:
  #         - !Ref esSecurityGroup
  # esSecurityGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Security group allowing HTTP/HTTPS to Elastic Search
  #     VpcId: !Ref VPCID
  #     # GroupName: ES SG
  #     SecurityGroupIngress:
  #       - FromPort: '443'
  #         IpProtocol: tcp
  #         ToPort: '443'
  #         CidrIp: !Ref AWSCidrBlock
  #     Tags:
  #       - Key: Name
  #         Value: !Join [' ', [!Ref 'AWS::StackName', ES SG]]
  # ElasticsearchBucket:
  #   Type: AWS::S3::Bucket
  #   Condition: CreateESBucket
  #   Properties:
  #     BucketName: !Ref ESBucketName
  #     Tags:
  #       - Key: Cluster
  #         Value: !Ref "AWS::StackName"
  DB:
    Type: AWS::RDS::DBInstance
    Properties:
      AutoMinorVersionUpgrade: false
      AllocatedStorage: !Ref DBStorage
      BackupRetentionPeriod: 10
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Ref AWS::StackName
      DBName: !If [RestoreRDSOrStandby, !Ref "AWS::NoValue", bitbucket]
      DBSnapshotIdentifier: !If [RestoreFromRDSSnapshot, !Ref DBSnapshotId, !Ref "AWS::NoValue"]
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: "10.10"
      Iops: !If [DBProvisionedIops, !Ref DBIops, !Ref "AWS::NoValue"]
      MasterUsername: postgres
      MasterUserPassword: !If [SetDBMasterUserPassword, !Ref DBMasterUserPassword, !Ref "AWS::NoValue"]
      MultiAZ: !If [StandbyMode, !Ref "AWS::NoValue", !Ref DBMultiAZ]
      PreferredBackupWindow: 15:00-16:00
      PreferredMaintenanceWindow: mon:17:00-mon:18:00
      StorageEncrypted: true
      StorageType: !If [DBProvisionedIops, io1, gp2]
      SourceDBInstanceIdentifier: !If [StandbyMode, !Ref DBMaster, !Ref "AWS::NoValue"]
      Tags:
        - Key: Name
          Value: !Sub ["${StackName} Bitbucket PostgreSQL Database", StackName: !Ref 'AWS::StackName']
        - Key: Application
          Value:
            !Ref "AWS::StackId"
        - Key: ProjectCode
          Value: 'T24'
        - Key: OwnerEmail
          Value: 'aws-integration-bitbucket@mebank.com.au'
        - Key: Availability
          Value: '24x7'
        - Key: Service
          Value: 'SCM'
      VPCSecurityGroups: [!Ref SecurityGroup]
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DBSubnetGroup
      # SubnetIds: !Split [ ",", !Join [ ",", [ !ImportValue PRI1-T0-ID-r0, !ImportValue PRI2-T0-ID-r0, !ImportValue PRI3-T0-ID-r0 ] ] ]
      #FIXME: Need to collect new import variables from inception
      SubnetIds: !Ref PrivateSubnets
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allowing SSH and HTTP/HTTPS access
      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: 22
#          ToPort: 22
#          CidrIp: !Ref AWSCidrBlock
#        - IpProtocol: tcp
#          FromPort: 80
#          ToPort: 80
#          CidrIp: !Ref AWSCidrBlock
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref AWSCidrBlock
        - IpProtocol: tcp
          FromPort: 7990
          ToPort: 7990
          CidrIp: !Ref AWSCidrBlock
        - IpProtocol: tcp
          FromPort: 7991
          ToPort: 7991
          CidrIp: !Ref AWSCidrBlock
        - IpProtocol: tcp
          FromPort: 7999
          ToPort: 7999
          CidrIp: !Ref AWSCidrBlock

      Tags:
        - Key: Name
          Value: !Join [' ', [!Ref 'AWS::StackName', SG]]
      # VpcId: !ImportValue VPCID-r0
      #FIXME: Need to collect new import variables from inception
      VpcId: !Ref VPCID
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: '-1'
      FromPort: '-1'
      ToPort: '-1'
      SourceSecurityGroupId: !Ref SecurityGroup
      
  FileServerDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub ${Route53ZoneDomain}.
      Name: !Sub nfs.${Route53ZoneDomain}
      Type: A
      TTL: '300'
      ResourceRecords: 
        - !GetAtt FileServer.PrivateIp

  FileServer:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Set up NFS Server and initial bitbucket.properties
      AWS::CloudFormation::Init:
        config:
          files:
            /etc/atl:
              content:
                !Join
                - "\n"
                -
                  - ATL_ENABLED_PRODUCTS=
                  - ATL_ENABLED_SHARED_HOMES=Bitbucket
                  - ATL_APP_NFS_SERVER=true
                  - ATL_NFS_SERVER_DEVICE=/dev/xvdf
                  # NOTE: For simplicity we should keep this as close to the BB node version above.
                  - !Sub ["ATL_PRODUCT_VERSION=${BitbucketVersion}", BitbucketVersion: !Ref BitbucketVersion]
                  - !Sub ["ATL_PROXY_NAME=${LoadBalancerDNSName}", LoadBalancerDNSName: !Ref LoadBalancerDNSName]
                  - ""
                  - !Sub ["ATL_AWS_REGION=${Region}", Region: !Ref "AWS::Region"]
                  - !Sub ["ATL_AWS_STACK_NAME=${StackName}", StackName: !Ref "AWS::StackName"]
                  - !Sub
                      - "ATL_AWS_IAM_ROLE=${Role}"
                      - Role:
                          Fn::ImportValue:
                            !Sub "BitbucketFileServerRole-${ReleaseName}"
                  - !Sub
                      - "ATL_AWS_IAM_ROLE_ARN=${Role}"
                      - Role:
                          Fn::ImportValue:
                            !Sub "BitbucketClusterNodeRoleArn-${ReleaseName}"
                  - ""
                  - "ATL_JDBC_DB_NAME=bitbucket"
                  - "ATL_JDBC_DRIVER=org.postgresql.Driver"
                  - "ATL_JDBC_USER=atlbitbucket"
                  - !Sub ["ATL_JDBC_PASSWORD='${DBPassword}'", DBPassword: !Ref DBPassword]
                  - !Sub ["ATL_DB_ROOT_PASSWORD='${DBMasterUserPassword}'", DBMasterUserPassword: !Ref DBMasterUserPassword]
                  - !Sub ["ATL_DB_HOST=${DBEndpointAddress}", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                  - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                  - !Sub ["ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/confluence", { DBEndpointAddress: !GetAtt DB.Endpoint.Address, DBEndpointPort: !GetAtt DB.Endpoint.Port }]
                  - ""
                  - !Sub ["ATL_RDS_INSTANCE_ID=${DB}", DB: !Ref "DB"]
                  - !Sub ["ATL_RDS_INSTANCE_CLASS=${DBInstanceClass}", DBInstanceClass: !Ref "DBInstanceClass"]
                  - !Sub ["ATL_RDS_MULTI_AZ=${DBMultiAZ}", DBMultiAZ: !Ref "DBMultiAZ"]
                  - !Sub ["ATL_RDS_SUBNET_GROUP_NAME=${DBSubnetGroup}", DBSubnetGroup: !Ref "DBSubnetGroup"]
                  - !Sub ["ATL_RDS_SECURITY_GROUP=${SecurityGroup}", SecurityGroup: !Ref "SecurityGroup"]
                  - ""
                  - !Sub ["ATL_NFS_DISK_VOLUME_TYPE=${VolType}", VolType: !If [IsHomeProvisionedIops, "io1", "gp2"]]
                  - !Sub ["ATL_NFS_DISK_VOLUME_IOPS=${VolIOPs}", VolIOPs: !If [IsHomeProvisionedIops, !Ref "HomeIops", ""]]
                  - ""
                  # - !Sub ["ATL_ELASTICSEARCH_HOST=${ESEndpoint}", ESEndpoint: !GetAtt Elasticsearch.DomainEndpoint]
                  - ATL_ELASTICSEARCH_HOST=http://localhost:7992
                  - !Sub ["ATL_ELASTICSEARCH_S3_BUCKET=${BucketName}", BucketName: !Ref ESBucketName]
                  - !Sub ["ATL_BITBUCKET_PROPERTIES=\"${BitbucketProperties}\"", BitbucketProperties: !Join ["\\\n", !Ref BitbucketProperties]]
                  - !If [DoSSL, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                  - ""

            /opt/atlassian/bin/clone_deployment_repo:
              content: !Sub |
                #!/bin/bash
                aws s3 cp s3://bitbucket.${Route53ZoneDomain}/dc-deployments-automation.zip --region ap-southeast-2 /opt/atlassian/dc-deployments-automation/
                unzip /opt/atlassian/dc-deployments-automation/dc-deployments-automation.zip -d /opt/atlassian/dc-deployments-automation/
              mode: "000777"
              owner: root
              group: root

          commands:
            070_create_atl_dir:
              test: "test ! -d /opt/atlassian/"
              command: mkdir -p /opt/atlassian
              ignoreErrors: false
            071_install_packages:
              command: yum install -y git python-virtualenv
              ignoreErrors: true
            072_clone_atl_scripts:
              test: "test ! -d /opt/atlassian/dc-deployments-automation/"
              command: /opt/atlassian/bin/clone_deployment_repo
              ignoreErrors: true
            080_run_atl_init_node:
              command:
                cd /opt/atlassian/dc-deployments-automation/ && ./bin/install-ansible && ./bin/ansible-with-atl-env inv/aws_node_local aws_bitbucket_nfs_node.yml /var/log/ansible-bootstrap.log
              ignoreErrors: true

    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/xvdf
          Ebs:
            DeleteOnTermination: !Ref HomeDeleteOnTermination
            Encrypted: true
            KmsKeyId: !ImportValue BB-KMS-KEY-KeyArn
            Iops: !If [IsHomeProvisionedIops, !Ref HomeIops, !Ref "AWS::NoValue"]
            SnapshotId: !If [RestoreFromEBSSnapshot, !Ref HomeVolumeSnapshotId, !Ref "AWS::NoValue"]
            VolumeSize: !Ref HomeSize
            VolumeType: !If [IsHomeProvisionedIops, io1, gp2]
      IamInstanceProfile:
        Fn::ImportValue:
          !Sub "BitbucketFileServerInstanceProfile-${ReleaseName}" 
      EbsOptimized: true
      ImageId:
        !FindInMap
        - BitbucketFileServerAMI
        - !Ref Route53ZoneDomain
        - HVM64
      InstanceType: !Ref FileServerInstanceType
      KeyName: !If [ KeyProvided, !Ref KeyPairName, !ImportValue ATL-DefaultKey ]
      NetworkInterfaces:
        - GroupSet: [!Ref SecurityGroup]
          AssociatePublicIpAddress: false
          DeviceIndex: '0'
          DeleteOnTermination: true
          #FIXME: Need to collect new import variables from inception
          SubnetId: !Ref NFSSubnetID
            # Fn::ImportValue: !Sub '${NFSSubnetID}'

      Tags:
        - 
          Key: Name
          Value: !Sub ["${StackName} Bitbucket NFS Server", StackName: !Ref 'AWS::StackName']
        - 
          Key: Cluster
          Value: !Ref AWS::StackName
        - 
          Key: ProjectCode
          Value: 'T24'
        - 
          Key: OwnerEmail
          Value: 'aws-integration-bitbucket@mebank.com.au'
        - 
          Key: Availability
          Value: '24x7'
        - 
          Key: Application
          Value: 'Bitbucket'
        - 
          Key: Service
          Value: 'SCM'
      UserData:
        Fn::Base64:
          !Join
          - ""
          -
            - "#!/bin/bash -xe\n"
            - "echo http_proxy=proxy.prod.centralservices.cld:3128 > /etc/environment\n"
            - "echo https_proxy=proxy.prod.centralservices.cld:3128 >> /etc/environment\n"
            - "echo no_proxy=169.254.169.254,169.254.170.2 >> /etc/environment\n"
            - "for line in $( cat /etc/environment ) ; do export $line ; done\n"
            - "yum update -y aws-cfn-bootstrap amazon-ssm-agent\n"
            - "yum install -y amazon-ssm-agent\n"
            - !Sub ["/opt/aws/bin/cfn-init -v --stack ${StackName}", StackName: !Ref "AWS::StackName"]
            - !Sub [" --resource FileServer --region ${Region}\n", Region: !Ref "AWS::Region"]
            - !Sub ["/opt/aws/bin/cfn-signal -e $? --stack ${StackName}", StackName: !Ref "AWS::StackName"]
            - !Sub [" --resource FileServer --region ${Region}\n", Region: !Ref "AWS::Region"]

Outputs:
  ClusterNodeGroup:
    Description: The name of the auto scaling group of cluster nodes
    Value: !Ref ClusterNodeGroup
  DBEndpointAddress:
    Description: The Database Connection String
    Value: !GetAtt DB.Endpoint.Address
  DBMaster:
    Description: The RDS ARN to use when creating a Data Center standby stack
    Value: !If [NotStandbyMode, !Sub ["arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:${DB}", {DB: !Ref "DB"}], !Ref "AWS::NoValue"]
  ServiceURL:
    Description: The URL of the Bitbucket Data Center instance
    Value: !Sub
      - "${HTTP}://${LoadBalancerDNSName}"
      - HTTP: !If [DoSSL, https, http]
        LoadBalancerDNSName: !Ref LoadBalancerDNSName
  SGname:
    Description: The name of the SecurityGroup
    Value: !Ref SecurityGroup
    Export: {
      Name: !Join ['', [!Ref 'AWS::StackName', -SGname]]
    }
